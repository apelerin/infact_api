version: "3.9"

volumes:
  postgres-data: {}


services:
  db:
    image: postgres
    user: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_NAME=${PG_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: bash -c "python manage.py migrate && pip install -r requirements.txt && python manage.py initialize_journals --mode=fill && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=${PG_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - DB_HOST=db
      - POSTGRES_PORT=${PG_PORT}
      - RAPIDAPI_PROXY_KEY=${RAPIDAPI_PROXY_KEY}
    depends_on:
      db:
        condition: service_healthy
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.app.schedule: "@every 12h"
      ofelia.job-exec.app.command: "python manage.py print_testing"

  ofelia:
    image: mcuadros/ofelia:latest
    restart: always
    depends_on:
      - web
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:r